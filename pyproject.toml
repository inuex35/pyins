[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyins"
version = "1.0.0"
description = "Comprehensive GNSS/INS processing library"
readme = "README.md"
requires-python = ">=3.8"
license = "Apache-2.0"
authors = [
    {name = "PyINS Development Team"},
]
maintainers = [
    {name = "PyINS Development Team"},
]
keywords = ["GNSS", "GPS", "INS", "IMU", "navigation", "positioning", "geodesy", "RTK", "SPP"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
    "numpy>=1.19.0",
    "scipy>=1.5.0",
    "pandas>=1.1.0",
    "matplotlib>=3.3.0",
    "numba>=0.51.2",
    "gnsspy",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "bandit[toml]>=1.7.0",
    "safety>=2.3.0",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
]

[project.urls]
Homepage = "https://github.com/inuex35/pyins"
Documentation = "https://github.com/inuex35/pyins"
Repository = "https://github.com/inuex35/pyins"
Issues = "https://github.com/inuex35/pyins/issues"

[tool.setuptools]
packages = ["pyins"]

[tool.setuptools.package-data]
pyins = ["**/*.py"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    -ra
    --strict-markers
    --ignore=docs
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
    --tb=short
    --maxfail=1
"""
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "benchmark: marks tests as benchmark tests",
]

[tool.coverage.run]
branch = true
source = ["pyins"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
]
precision = 2
show_missing = true
skip_covered = false

[tool.ruff]
target-version = "py39"
line-length = 100
indent-width = 4

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long
    "E741",  # ambiguous variable name
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.bandit]
targets = ["pyins"]
skip = ["B101", "B601"]
severity = "medium"